#!/usr/bin/env python
# -*- coding: utf-8 -*-

Import('env')

SRC_DIR = './'
MEDIA_SRC_DIR = '../' + env['MEDIA_SRC_DIR'] + '/'
DEST_DIR = '../' + env['TEMPLATES_DEST_DIR'] + '/'
TEMPLATE_BUILD_DIR = './_build/'

base_site_pickle = env.Pickle('base_site_vars.pkl', Value({
    'LOADER_SCRIPT': open(MEDIA_SRC_DIR + 'script/lib/chickoojs/src/loader-min.js', 'r').read()
}))
env.Cheetah(TEMPLATE_BUILD_DIR + 'base_site.html', 'base_site.html.tmpl', PICKLE=base_site_pickle)
env.Cheetah(TEMPLATE_BUILD_DIR + 'admin/base_site.html', 'base_site.html.tmpl', PICKLE=base_site_pickle)

HTML_FILES = Split("""
    base.html
""")

TEMPLATE_FILES = HTML_FILES + Split("""

""")

PLAIN_COPIES = Split("""
""")

MINIFIABLE_FILES = HTML_FILES + Split("""
    admin/base_site.html
    base_site.html
""")

GENERAL_PICKLE = env.Pickle('general_vars.pkl', Value({}))
for f in set(TEMPLATE_FILES):
    env.Cheetah(TEMPLATE_BUILD_DIR + f, SRC_DIR + f, PICKLE=GENERAL_PICKLE)

for f in set(PLAIN_COPIES):
    env.Command(DEST_DIR + f, SRC_DIR + f, Copy("$TARGET", "$SOURCE"))

for f in set(MINIFIABLE_FILES):
    env.HTMLMinify(DEST_DIR + f, TEMPLATE_BUILD_DIR + f, HTML_MINIFY_INLINE=True)
    #env.Command(DEST_DIR + f, TEMPLATE_BUILD_DIR + f, Copy("$TARGET", "$SOURCE"))

